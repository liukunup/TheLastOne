yarn create v1.22.21
[1/4] 🔍  Resolving packages...
[2/4] 🚚  Fetching packages...
[3/4] 🔗  Linking dependencies...
[4/4] 🔨  Building fresh packages...

success Installed "create-playwright@1.17.132" with binaries:
      - create-playwright
[######################################################################] 70/70Getting started with writing end-to-end tests with Playwright:
Initializing project in '.'
✔ Do you want to use TypeScript or JavaScript? · TypeScript
✔ Where to put your end-to-end tests? · tests
✔ Add a GitHub Actions workflow? (y/N) · true
✔ Install Playwright browsers (can be done manually via 'yarn playwright install')? (Y/n) · true
Initializing Yarn project (yarn init -y)…
yarn init v1.22.21
warning The yes flag has been set. This will automatically answer yes to all questions, which may have security implications.
success Saved package.json
✨  Done in 0.07s.
Installing Playwright Test (yarn add --dev @playwright/test)…
yarn add v1.22.21
info No lockfile found.
[1/4] 🔍  Resolving packages...
[2/4] 🚚  Fetching packages...
[3/4] 🔗  Linking dependencies...
[4/4] 🔨  Building fresh packages...

success Saved lockfile.
success Saved 4 new dependencies.
info Direct dependencies
└─ @playwright/test@1.42.1
info All dependencies
├─ @playwright/test@1.42.1
├─ fsevents@2.3.2
├─ playwright-core@1.42.1
└─ playwright@1.42.1
✨  Done in 11.29s.
Installing Types (yarn add --dev @types/node)…
yarn add v1.22.21
[1/4] 🔍  Resolving packages...
[2/4] 🚚  Fetching packages...
[3/4] 🔗  Linking dependencies...
[4/4] 🔨  Building fresh packages...
success Saved lockfile.
success Saved 2 new dependencies.
info Direct dependencies
└─ @types/node@20.11.27
info All dependencies
├─ @types/node@20.11.27
└─ undici-types@5.26.5
✨  Done in 3.36s.
Writing playwright.config.ts.
Writing .github/workflows/playwright.yml.
Writing tests/example.spec.ts.
Writing tests-examples/demo-todo-app.spec.ts.
Writing package.json.
Downloading browsers (yarn playwright install)…
yarn run v1.22.21
$ /Users/{username}/Documents/GitHub/TheLastOne/node_modules/.bin/playwright install
Removing unused browser at /Users/{username}/Library/Caches/ms-playwright/chromium-1076
Removing unused browser at /Users/{username}/Library/Caches/ms-playwright/firefox-1422
Removing unused browser at /Users/{username}/Library/Caches/ms-playwright/webkit-1883
Downloading Chromium 123.0.6312.4 (playwright build v1105) from https://playwright.azureedge.net/builds/chromium/1105/chromium-mac.zip
141.4 MiB [====================] 100% 0.0s
Chromium 123.0.6312.4 (playwright build v1105) downloaded to /Users/{username}/Library/Caches/ms-playwright/chromium-1105
Downloading Firefox 123.0 (playwright build v1440) from https://playwright.azureedge.net/builds/firefox/1440/firefox-mac-13.zip
82.2 MiB [====================] 100% 0.0s
Firefox 123.0 (playwright build v1440) downloaded to /Users/{username}/Library/Caches/ms-playwright/firefox-1440
Downloading Webkit 17.4 (playwright build v1983) from https://playwright.azureedge.net/builds/webkit/1983/webkit-mac-13.zip
68.3 MiB [====================] 100% 0.0s
Webkit 17.4 (playwright build v1983) downloaded to /Users/{username}/Library/Caches/ms-playwright/webkit-1983
✨  Done in 433.76s.
✔ Success! Created a Playwright Test project at /Users/{username}/Documents/GitHub/TheLastOne

Inside that directory, you can run several commands:

  yarn playwright test
    Runs the end-to-end tests.

  yarn playwright test --ui
    Starts the interactive UI mode.

  yarn playwright test --project=chromium
    Runs the tests only on Desktop Chrome.

  yarn playwright test example
    Runs the tests in a specific file.

  yarn playwright test --debug
    Runs the tests in debug mode.

  yarn playwright codegen
    Auto generate tests with Codegen.

We suggest that you begin by typing:

    yarn playwright test

And check out the following files:
  - ./tests/example.spec.ts - Example end-to-end test
  - ./tests-examples/demo-todo-app.spec.ts - Demo Todo App end-to-end tests
  - ./playwright.config.ts - Playwright Test configuration

Visit https://playwright.dev/docs/intro for more information. ✨

Happy hacking! 🎭
✨  Done in 478.36s.